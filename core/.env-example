KUBE_CONFIG_PATH=/Users/<USER_NAME>/.kube/config

##  verbose | debug | info | warn | error | fatal | panic
LOG_LEVEL=debug

GRPC_PORT=8080
GRPC_WEB_PORT=8090 # Port number accessed by the dashboard

##  Domain/Subdomain used to create external name for api and web app services
KINTO_DOMAIN=oss.kintohub.net

##  Kinto Builder api host (see https://github.com/kintoproj/kinto-builder)
BUILD_API_HOST=kinto-builder:8080

##  Logs configuration
CONSOLE_LOGS_HISTORY_SECONDS=93600 # Max time in past to send to client on initial connection
CONSOLE_LOGS_MAX_LINES_ON_START=1000 # Max lines to send to client on initial connection.

##  SSL configuration
SSL_ENABLED=false ##  If false, all external access will be create without certificates
CERT_MANAGER_ISSUER_EMAIL=devaccounts@kintohub.com
CERT_MANAGER_ISSUER_SERVER=https://acme-staging-v02.api.letsencrypt.org/directory

##  Allowed host for CORS. Defaults to * which allows everything.
CORS_ALLOWED_HOST=*

##  Metrics and health refresh frequency for the dashboard
HEALTH_UPDATE_TICK_SECONDS=1
METRICS_UPDATE_TICK_SECONDS=5

##  Enables dev proxy (chisel) into every namespace for proxy / teleport related functionality
KINTO_DEV_PROXY_ENABLED=true

KINTO_CORE_NAMESPACE=kintohub

##  Kubernetes secret used by kinto builder to push the image into the container registry
##  Must be a docker secret - `kubernetes.io/dockerconfigjson`
##  Must be in ${KINTO_CORE_NAMESPACE}
KINTO_BUILDER_DOCKER_SECRET=kinto-builder-workflow-docker

##  If set, every request sent to the core service will have to set an "authorization" header with this secret
KINTO_CORE_SECRET=